library(readxl)
library(tidyverse)
library(RColorBrewer)
library(ggbeeswarm)
library(ggpubr)
library(reshape2)
library(gridExtra)
library(stringr)
library(EnvStats)
library(multcompView)
library(stats)
library(ggh4x)
library(readxl)
library(tidyverse)
library(RColorBrewer)
library(ggbeeswarm)
library(ggpubr)
library(reshape2)
library(gridExtra)
library(stringr)
library(EnvStats)
library(multcompView)
library(stats)
library(ggh4x)
library(ggh4x)
warnings()
library(readxl)
library(tidyverse)
library(RColorBrewer)
library(ggbeeswarm)
library(ggpubr)
library(reshape2)
library(gridExtra)
library(stringr)
library(EnvStats)
library(multcompView)
library(stats)
#library(ggh4x)
CFUs <- data.frame(read.csv("All_CFU_Count.csv"))
CFUs$Colonization <- factor(CFUs$Colonization, levels=c("MD", "Sn", "Gi", "Sn_Gi"))
CFUs$Diet <- factor(CFUs$Diet, levels=c("SW", "P"))
CFUs$Condition <- factor(CFUs$Condition, levels=c("MD_SW", "MD_P", "Sn_SW", "Sn_P","Gi_SW", "Gi_P","Sn_Gi_SW", "Sn_Gi_P"))
CFUs$Experiment <- factor(CFUs$Experiment)
cfu_anova <- aov(log10(CFU)~ Condition, data=CFUs, na.action = na.omit)
tHSD_cfu <- TukeyHSD(cfu_anova, conf.level = 0.95)
#plot(tHSD_cfu , las=1 , col="brown")
generate_label_df <- function(tHSD_cfu, variable){
# Extract labels and factor levels from Tukey post-hoc
Tukey.levels <- tHSD_cfu[[variable]][,4]
Tukey.labels <- data.frame(multcompLetters(Tukey.levels)['Letters'])
#I need to put the labels in the same order as in the boxplot :
Tukey.labels$Cage=rownames(Tukey.labels)
Tukey.labels=Tukey.labels[order(Tukey.labels$Cage) , ]
return(Tukey.labels)
}
LABELS=generate_label_df(tHSD_cfu , "Condition")
tHSD_label <- LABELS %>%
mutate(yhsd = 1e+08)
compare_means(CFU ~ Diet, group.by = "Colonization", data = CFUs)
diet_comp <- list( c("Sn_SW", "Sn_P"),c("Gi_SW", "Gi_P"),c("Sn_Gi_SW", "Sn_Gi_P"))
ggplot(data = CFUs, mapping = aes(x = Condition, y = CFU)) +
geom_quasirandom(fill="grey80",color = "black", height = 0, width = 0.33, shape=21, size = 1) +
stat_summary(fun.y = median, fun.ymin = median, fun.ymax = median,
geom = "crossbar",width = 0.5, color="salmon", size=0.25) +
theme(axis.title.x = element_text(vjust = -0.6, size=8),
panel.background = element_rect(fill = "white", colour = "grey50") ,   legend.position = "none",
axis.text.x = element_text(color = "black", size=8),
panel.border = element_rect(colour = "grey", fill=NA, size=1),
axis.text.y = element_text(color = "black", size=8),
axis.title.y =element_text(color = "black", size=8),
legend.text = element_text(color = "black", size=6),
legend.title = element_text(color = "black", size=6),
plot.title = element_text(hjust = 0.5, size=8))+
scale_y_log10( name = "CFU's / Gut", breaks = scales::trans_breaks("log10", function(x) 10^x),
labels = scales::trans_format("log10", scales::math_format(10^.x)),
limits = c(1e+02, 5e+9)) +
scale_x_discrete(labels=c('MD','MD (P)', 'Sn', 'Sn (P)', 'Gi', 'Gi (P)','Sn+Gi', 'Sn+Gi (P)')) +
annotation_logticks(sides = "l") +
geom_hline(yintercept=140, col="grey50", linetype = "dashed") +
#geom_text(data = tHSD_label, aes(x = Cage,  y = yhsd, label = Letters), size=5) +
stat_compare_means(comparisons = diet_comp, label =  "p.signif", label.y=c(8,8.5,9)) +
stat_n_text(na.rm = TRUE, size=2, y.pos = 2.5)
CFUs_strain <- data.frame(read.csv("CFU_Count_AM.csv"))
CFUs_strain$Colony_count <- as.numeric(CFUs_strain$Colony_count)
CFUs_strain$Dilution <- as.numeric(CFUs_strain$Dilution)
CFUs_strain <- CFUs_strain%>%
mutate(cfu_count = Colony_count * 700 / 10 * 10 ^ Dilution) %>%
drop_na(cfu_count)
Success <- CFUs_strain %>%
group_by(Species, Colonization) %>%
summarise(n_bees = n(),
n_col = sum(cfu_count > 140),
colonized = n_col / n_bees) %>%
mutate(colonized = scales::percent(colonized, accuracy = 1),
ypos = 20)
Success_native <- CFUs_strain %>%
filter(Native != "None") %>%
group_by(Species, Native) %>%
summarise(n_bees = n(),
n_col = sum(cfu_count > 140),
colonized = n_col / n_bees) %>%
mutate(colonized = scales::percent(colonized, accuracy = 1),
n_md = n_bees - n_col)
Success_apis <- Success_native %>%
filter(Species == "Apis") %>%
select(Native, n_col,n_md) %>%
column_to_rownames(var = "Native") %>%
select(n_col,n_md)
fisher.test(Success_apis)
cfu_anova <- aov(log10(cfu_count)~ Colonization, data=CFUs_strain, na.action = na.omit)
tHSD_cfu <- TukeyHSD(cfu_anova, conf.level = 0.95)
generate_label_df <- function(tHSD_cfu, variable){
# Extract labels and factor levels from Tukey post-hoc
Tukey.levels <- tHSD_cfu[[variable]][,4]
Tukey.labels <- data.frame(multcompLetters(Tukey.levels)['Letters'])
#I need to put the labels in the same order as in the boxplot :
Tukey.labels$Colonization=rownames(Tukey.labels)
Tukey.labels=Tukey.labels[order(Tukey.labels$Colonization) , ]
return(Tukey.labels)
}
